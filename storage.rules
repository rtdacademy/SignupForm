rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions remain the same
    function isRTDStaff() {
      return request.auth != null && request.auth.token.email.matches('.*@rtdacademy\\.com');
    }
    
    function isAdmin() {
      return request.auth != null && 
             root.child('adminEmails').val().includes(request.auth.token.email);
    }
    
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*') && 
             (request.resource.contentType == 'image/jpeg' ||
              request.resource.contentType == 'image/png' ||
              request.resource.contentType == 'image/webp');
    }
    
    function isValidImageSize() {
      return request.resource.size <= 5 * 1024 * 1024;
    }
    
    // Updated images path to include delete permission
    match /images/{imageId}/{fileName} {
      allow read: if true;  // Anyone can read
      allow write: if request.auth != null &&  // Must be authenticated
                     isValidImageType() &&     // Must be valid image type
                     isValidImageSize();       // Must be under size limit
      allow delete: if request.auth != null;   // Added delete permission for authenticated users
    }
    
    // Added new rule for Reports directory
    match /Reports/{fileName} {
      allow read: if true;  // Anyone can read
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can modify
    }
    
    // Course development code files
    match /courseDevelopment/{courseId}/{lessonPath}/{fileName} {
      allow read: if request.auth != null;  // Any authenticated user can read
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can modify
    }
    
    // Rest of your rules remain the same...
    match /files/{fileId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /assistant-files/{assistantId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /invoices/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
   match /rtdAcademy/international/{userId}/{document=**} {
    allow write: if request.auth != null &&
                request.auth.uid == userId;
    allow read: if request.auth != null &&
               (request.auth.uid == userId || isRTDStaff());
  }

  // Student photo uploads
  match /rtdAcademy/studentPhotos/{userId}/{document=**} {
    allow write: if request.auth != null &&
                request.auth.uid == userId;
    allow read: if request.auth != null &&
               (request.auth.uid == userId || isRTDStaff());
  }

  // Citizenship documents
  match /rtdAcademy/citizenshipDocs/{userId}/{document=**} {
    allow write: if request.auth != null &&
                request.auth.uid == userId;
    allow read: if request.auth != null &&
               (request.auth.uid == userId || isRTDStaff());
  }

  // Legal documents
  match /rtdAcademy/legalDocuments/{userId}/{document=**} {
    allow write: if request.auth != null &&
                request.auth.uid == userId;
    allow read: if request.auth != null &&
               (request.auth.uid == userId || isRTDStaff());
  }
    
    match /shared-documents/{allPaths=**} {
      allow read, write: if request.auth != null && isRTDStaff();
    }
    
    match /personal-documents/{userEmail}/{allPaths=**} {
      allow read: if request.auth != null && 
                 (request.auth.token.email == userEmail || isAdmin());
      allow write: if request.auth != null && 
                  request.auth.token.email == userEmail;
    }
    
match /coldStorage/{fileName} {
  allow read, write: if request.auth != null;
}

    // Brand logos - anyone can read, only staff can write
    match /brandLogos/{userId}/{fileName} {
      allow read: if true;  // Anyone can view brand logos
      allow write, delete: if request.auth != null &&
                           (request.auth.uid == userId || isRTDStaff());  // User can manage their own logos or staff can manage any
    }

    // Public shared files - everyone can read, only staff can write
    match /shared/public/{allPaths=**} {
      allow read: if true;  // Anyone can read public files
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can write
    }

    // Private shared files - any authenticated user can read, staff can write
    match /shared/private/{allPaths=**} {
      allow read: if request.auth != null;  // Any authenticated user can read
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can write/delete
    }

    // ============ COURSE ACCESS RULES ============
    // IMPORTANT: Specific course rules must come BEFORE the general course rule

    // PUBLIC COURSES - Add any courses that should be publicly accessible here
    // CALM 20 - Completely public access (no authentication required)
    match /shared/courses/calm-20/{allPaths=**} {
      allow read: if true;  // Anyone can read CALM 20 materials
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can modify
    }

    // Add more public courses here as needed, for example:
    // match /shared/courses/course-name-here/{allPaths=**} {
    //   allow read: if true;  // Public access
    //   allow write, delete: if request.auth != null && isRTDStaff();
    // }

    // DEFAULT COURSE RULE - All other courses require authentication
    // This catches any course not specifically listed above
    match /shared/courses/{courseId}/{allPaths=**} {
      allow read: if request.auth != null;  // Must be logged in to read
      allow write, delete: if request.auth != null && isRTDStaff();  // Only staff can modify
    }

    // Allow listing the courses directory itself
    match /shared/courses/{fileName} {
      allow read: if request.auth != null;  // Can list courses if logged in
      allow write: if request.auth != null && isRTDStaff();  // Only staff can create courses
    }

    // Teacher personal storage
    match /teachers/{teacherId}/{allPaths=**} {
      allow read, write, delete: if request.auth != null &&
                                 (request.auth.uid == teacherId || isRTDStaff());
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}