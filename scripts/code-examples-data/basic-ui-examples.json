{
  "codeExamples/basic-ui/card-with-tabs": {
    "id": "card-with-tabs",
    "title": "Card with Tabs Layout",
    "category": "Basic UI",
    "description": "A card component with tabbed content sections",
    "tags": ["card", "tabs", "layout", "navigation"],
    "difficulty": "beginner",
    "imports": [
      "import { Card, CardContent, CardHeader, CardTitle } from '../../../../components/ui/card';",
      "import { Tabs, TabsContent, TabsList, TabsTrigger } from '../../../../components/ui/tabs';"
    ],
    "code": "const TabbedContentSection = ({ course, courseId, isStaffView, devMode }) => {\n  return (\n    <div className=\"tabbed-content-section mb-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>üìñ Learning Materials</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"overview\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"details\">Details</TabsTrigger>\n              <TabsTrigger value=\"resources\">Resources</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"overview\" className=\"mt-4\">\n              <div className=\"space-y-2\">\n                <h3 className=\"font-semibold\">Lesson Overview</h3>\n                <p className=\"text-gray-600\">\n                  This lesson introduces fundamental concepts that will form the foundation \n                  for more advanced topics. Pay close attention to the key terms and definitions.\n                </p>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"details\" className=\"mt-4\">\n              <div className=\"space-y-2\">\n                <h3 className=\"font-semibold\">Detailed Information</h3>\n                <ul className=\"list-disc list-inside text-gray-600 space-y-1\">\n                  <li>Concept 1: Understanding the basics</li>\n                  <li>Concept 2: Building on fundamentals</li>\n                  <li>Concept 3: Advanced applications</li>\n                </ul>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"resources\" className=\"mt-4\">\n              <div className=\"space-y-2\">\n                <h3 className=\"font-semibold\">Additional Resources</h3>\n                <div className=\"space-y-2\">\n                  <a href=\"#\" className=\"text-blue-600 hover:underline block\">\n                    üìÑ Download Study Guide (PDF)\n                  </a>\n                  <a href=\"#\" className=\"text-blue-600 hover:underline block\">\n                    üé• Watch Video Tutorial\n                  </a>\n                  <a href=\"#\" className=\"text-blue-600 hover:underline block\">\n                    üìù Practice Exercises\n                  </a>\n                </div>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default TabbedContentSection;",
    "createdAt": "2025-01-06T10:00:00Z",
    "updatedAt": "2025-01-06T10:00:00Z",
    "createdBy": "system",
    "isPublic": true
  },
  "codeExamples/basic-ui/progress-tracker": {
    "id": "progress-tracker",
    "title": "Progress Tracker Component",
    "category": "Basic UI",
    "description": "Visual progress indicator for lesson completion",
    "tags": ["progress", "tracker", "visual", "feedback"],
    "difficulty": "beginner",
    "imports": [
      "import React, { useState } from 'react';",
      "import { Card, CardContent, CardHeader, CardTitle } from '../../../../components/ui/card';",
      "import { Progress } from '../../../../components/ui/progress';",
      "import { Button } from '../../../../components/ui/button';",
      "import { CheckCircle, Circle } from 'lucide-react';"
    ],
    "code": "const ProgressTrackerSection = ({ course, courseId, isStaffView, devMode }) => {\n  const [completedSteps, setCompletedSteps] = useState([]);\n  \n  const steps = [\n    { id: 1, title: 'Watch Introduction Video', duration: '5 min' },\n    { id: 2, title: 'Read Key Concepts', duration: '10 min' },\n    { id: 3, title: 'Complete Practice Problems', duration: '15 min' },\n    { id: 4, title: 'Take Mini Quiz', duration: '5 min' },\n    { id: 5, title: 'Review Summary', duration: '3 min' }\n  ];\n  \n  const toggleStep = (stepId) => {\n    setCompletedSteps(prev => \n      prev.includes(stepId) \n        ? prev.filter(id => id !== stepId)\n        : [...prev, stepId]\n    );\n  };\n  \n  const progress = (completedSteps.length / steps.length) * 100;\n\n  return (\n    <div className=\"progress-tracker-section mb-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>üìä Lesson Progress</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {/* Progress Bar */}\n            <div>\n              <div className=\"flex justify-between text-sm mb-2\">\n                <span className=\"font-medium\">Overall Progress</span>\n                <span className=\"text-gray-600\">{Math.round(progress)}%</span>\n              </div>\n              <Progress value={progress} className=\"h-2\" />\n            </div>\n            \n            {/* Steps List */}\n            <div className=\"space-y-2\">\n              {steps.map((step) => {\n                const isCompleted = completedSteps.includes(step.id);\n                return (\n                  <div\n                    key={step.id}\n                    className={`flex items-center justify-between p-3 rounded-lg border transition-colors cursor-pointer\n                      ${isCompleted ? 'bg-green-50 border-green-200' : 'bg-gray-50 border-gray-200 hover:bg-gray-100'}`}\n                    onClick={() => toggleStep(step.id)}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      {isCompleted ? (\n                        <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                      ) : (\n                        <Circle className=\"h-5 w-5 text-gray-400\" />\n                      )}\n                      <span className={`font-medium ${isCompleted ? 'text-green-800' : 'text-gray-700'}`}>\n                        {step.title}\n                      </span>\n                    </div>\n                    <span className=\"text-sm text-gray-500\">{step.duration}</span>\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Completion Message */}\n            {progress === 100 && (\n              <div className=\"bg-green-100 border border-green-200 rounded-lg p-4 text-center\">\n                <p className=\"text-green-800 font-medium\">\n                  üéâ Congratulations! You've completed this lesson!\n                </p>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProgressTrackerSection;",
    "createdAt": "2025-01-06T10:00:00Z",
    "updatedAt": "2025-01-06T10:00:00Z",
    "createdBy": "system",
    "isPublic": true
  },
  "codeExamples/basic-ui/info-cards-grid": {
    "id": "info-cards-grid",
    "title": "Information Cards Grid",
    "category": "Basic UI", 
    "description": "Grid layout of informational cards with icons",
    "tags": ["grid", "cards", "layout", "information"],
    "difficulty": "beginner",
    "imports": [
      "import { Card, CardContent, CardHeader, CardTitle } from '../../../../components/ui/card';",
      "import { BookOpen, Clock, Target, Award } from 'lucide-react';"
    ],
    "code": "const InfoCardsGridSection = ({ course, courseId, isStaffView, devMode }) => {\n  const infoCards = [\n    {\n      icon: BookOpen,\n      title: 'Prerequisites',\n      content: 'Basic understanding of algebra and problem-solving skills',\n      color: 'text-blue-600'\n    },\n    {\n      icon: Clock,\n      title: 'Duration',\n      content: 'Approximately 45 minutes to complete',\n      color: 'text-green-600'\n    },\n    {\n      icon: Target,\n      title: 'Learning Objectives',\n      content: 'Master 5 key concepts and solve practical problems',\n      color: 'text-purple-600'\n    },\n    {\n      icon: Award,\n      title: 'Achievement',\n      content: 'Earn a completion badge upon finishing',\n      color: 'text-orange-600'\n    }\n  ];\n\n  return (\n    <div className=\"info-cards-grid-section mb-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {infoCards.map((card, index) => {\n          const Icon = card.icon;\n          return (\n            <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"flex items-center gap-2 text-base\">\n                  <Icon className={`h-5 w-5 ${card.color}`} />\n                  {card.title}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-sm text-gray-600\">{card.content}</p>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default InfoCardsGridSection;",
    "createdAt": "2025-01-06T10:00:00Z",
    "updatedAt": "2025-01-06T10:00:00Z", 
    "createdBy": "system",
    "isPublic": true
  }
}